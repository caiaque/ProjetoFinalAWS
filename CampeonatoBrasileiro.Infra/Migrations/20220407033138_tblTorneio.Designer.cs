// <auto-generated />
using System;
using CampeonatoBrasileiro.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CampeonatoBrasileiro.Infra.Migrations
{
    [DbContext(typeof(CampeonatoBrasileiroContext))]
    [Migration("20220407033138_tblTorneio")]
    partial class tblTorneio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CampeonatoBrasileiro.Domain.Entities.Jogador", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DateTime")
                        .HasColumnName("DataNascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Pais");

                    b.Property<Guid>("TimeId")
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TimeId");

                    b.HasKey("Id");

                    b.ToTable("Jogador");
                });

            modelBuilder.Entity("CampeonatoBrasileiro.Domain.Entities.PartidaTorneio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<Guid>("TimeCasaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TimeVisitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TorneioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TimeCasaId");

                    b.HasIndex("TimeVisitanteId");

                    b.HasIndex("TorneioId");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("CampeonatoBrasileiro.Domain.Entities.Time", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Localidade");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<Guid?>("TorneioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TorneioId");

                    b.ToTable("Time");
                });

            modelBuilder.Entity("CampeonatoBrasileiro.Domain.Entities.Torneio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Torneios");
                });

            modelBuilder.Entity("CampeonatoBrasileiro.Domain.Entities.Transferencia", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("DateTime")
                        .HasColumnName("Data");

                    b.Property<Guid>("JogadorId")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("JogadorId");

                    b.Property<Guid>("TimeDestinoId")
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TimeDestinoId");

                    b.Property<Guid>("TimeOrigemId")
                        .HasColumnType("varchar(max)")
                        .HasColumnName("TimeOrigemId");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.ToTable("Transferencia");
                });

            modelBuilder.Entity("CampeonatoBrasileiro.Domain.Entities.Jogador", b =>
                {
                    b.HasOne("CampeonatoBrasileiro.Domain.Entities.Time", null)
                        .WithMany()
                        .HasForeignKey("Id")
                        .HasConstraintName("ForeignKey_Jogador_Time")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CampeonatoBrasileiro.Domain.Entities.PartidaTorneio", b =>
                {
                    b.HasOne("CampeonatoBrasileiro.Domain.Entities.Time", "TimeCasa")
                        .WithMany()
                        .HasForeignKey("TimeCasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampeonatoBrasileiro.Domain.Entities.Time", "TimeVisitante")
                        .WithMany()
                        .HasForeignKey("TimeVisitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampeonatoBrasileiro.Domain.Entities.Torneio", null)
                        .WithMany("PartidasEntreTimes")
                        .HasForeignKey("TorneioId");

                    b.Navigation("TimeCasa");

                    b.Navigation("TimeVisitante");
                });

            modelBuilder.Entity("CampeonatoBrasileiro.Domain.Entities.Time", b =>
                {
                    b.HasOne("CampeonatoBrasileiro.Domain.Entities.Torneio", null)
                        .WithMany("Times")
                        .HasForeignKey("TorneioId");
                });

            modelBuilder.Entity("CampeonatoBrasileiro.Domain.Entities.Transferencia", b =>
                {
                    b.HasOne("CampeonatoBrasileiro.Domain.Entities.Jogador", null)
                        .WithMany()
                        .HasForeignKey("Id")
                        .HasConstraintName("ForeignKey_Transferencia_Jogador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CampeonatoBrasileiro.Domain.Entities.Torneio", b =>
                {
                    b.Navigation("PartidasEntreTimes");

                    b.Navigation("Times");
                });
#pragma warning restore 612, 618
        }
    }
}
